《数组》
存储一批同类型数据的地方。

如何定义一个数组呢？
·类型 数组名[元素个数]
如：
int a[6];      //
char b[24];
double c[3];

甚至可以：
int a[3+3];
char b[20+4];
double c[1+2];

^---------------------------
·上面几个类型都占用多少字节的内存呢？

整型变量每个元素4个字节，一共有6个元素
6*4 = 24，所以占用24字节内存。

int a[6];     | 0 | 1 | 2 | 3 | 4 | 5 |

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

字符型变量每个元素1个字节，一共有24个元素
24*1 = 24，所以占用24字节内存。

char b[24];   |0|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|16|17|18|19|20|21|22|23|

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

浮点型变量在编译系统里每个元素占8个字节，一共有3个元素
3*8 = 24，所以占用24字节内存

double c[3];   |    0    |    1    |    2    |

-------------------------------------------------------------------------
《数组不能被动态定义》
也就是在程序运行过程中不允许修改数组空间大小。

如：
#include <stdio.h>

int main()
{
    int n;
    printf("请输入字符的个数：");
    scanf("%d", &n);
    int a[n];  //*这个方括号里只能是常量或者常量表达式
    ……            并且定义需要在程序最开头的地方写;
                  只有定义一个循环变量的时候定义才可以卸载中间(C99标准)*//
    return 0;
}

/**这个在新版C语言执行标准中有争议，详情见笔记<教程18动态数组>**/

---------------------------------------------------------------------------
《访问数组中的元素》
访问数组中的元素一样需要方括号，所以可以把方括号直接和数组挂钩。

·数组名[下标]
a[0]; //**访问a数组中的第一个元素
b[1]; //**访问b数组中的第二个元素
c[5]; //**访问c数组中的第六个元素

注意：
int a[5]; //**创建一个具有五个元素的数组
a[0]; //**访问第一个元素下标是0，不是1
a[5]; //**报错，因为第五个元素的下标是a[4];

--------------------------------------------
《循环跟数组的关系》
为什么循环变量初始化为0而不是1？

·实现一个执行10次的循环，我们通常是怎么写：
for (i = 0; i < 10; i++)
{
    ……
}

而不是这么写：
for (i = 0; i <= 10; i++)
{
    ……
}
这就是因为跟数组有关系了。


这是因为我们常常需要使用循环来访问数组：
int a[10];
for(i = 0; i < 10; i++)
{
    a[i] = i;
}

所以呢，我们养成这种习惯，这样数组的访问就不会造成越界的问题。
因为你看这里创建10个元素的数组，那我肯定就要执行10次的循环来为他们赋值。
那他的元素访问就分别是下标0-9 ，这里i从0开始，到9，10不符合条件，退出循环。
如果程序遵从这种写法，数组越界的问题就会很好的避免。

·举个例子，我们尝试用数组存放班里10位同学的数学成绩，并计算出平均数。
↑这个例子在例子.c

------------------------------------------------
《数组的初始化》
例子.c是先定义一个数组，通过for循环给他赋值，这样我们称之为数组的初始化。
数组的初始化有很多种：

·将数组中所有元素初始化为0，可以这么写：
int a[10] = {0}; //**事实上这里只是将第一个元素赋值为0
(也就是即使把花括号的0改成1，也只有第一个元素是1，剩下的全是0)


·如果是赋予不同的值，那么用逗号分隔开即可：
int a[10] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 0};


·你还可以指给一部分元素赋值，未被赋值的元素自动初始化为0：
int a[10] = {1, 2, 3, 4, 5, 6};
//**表示为前边6个元素赋值，后边4个元素系统自动初始化为0
↑这个在赋值2.c


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~·
·有时候甚至可以偷懒，可以只给出各个元素的值，而不指定数组的长度
（因为编译器会根据值的个数自动判断数组的长度）：
int a[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 0};


·C99增加了一种新特性：指定初始化的元素。
这样就可以只对数组中的某些指定元素进行初始化赋值，
而未被复制的元素自动初始化为0：
int a[10] = {[3] = 3, [5] =5, [8] = 8};
↑这个在赋值3.c

(在赋值3.c还把sizeof一笔带过了，注意一下)
