<for语句大章>

回忆while与do……while语句
^-----------------------
《入口条件循环》
while (i <= 100)
{
    sum = sum +i;
    i = i + 1;
}

------------------------
《出口条件循环》
do
{
    sum = sum + i;
    i = i + 1;
}while (i <= 100);


--------------------------
循环的基本结构

int count = 0;      //**初始化计数器
while (count < 10)   //循环条件
{
    printf("hello\n");
    count = count + 1;    //**更新计数器
}

==============================
《for语句》

for(表达式1; 表达式2; 表达式3)
    循环体

三个表达式用分号隔开，其中：
·表达式1是循环初始化表达式。
·表达式2是循环条件表达式。
·表达式3是循环调整表达式。

分别为while中的 初始化计数器，循环条件，更新计数器。

-----------------------------------
《灵活的for语句》

·表达式1，表达式2和表达式3可以按照需要进行省略（但分号不能省）：
- for ( ; 表达式2; 表达式3)
- for (表达式1; 表达式2; )
- for (表达式1; ; )
- for ( ; ;) //**这样写代表while (1){……}，也就是永远为真。
- ……
↑实例在for2.c

·表达式1和表达式3可以是个简单的表达式，也可以是逗号表达式（即用逗号分隔多个表达式）
↑实例在for3.c

==========================================
C99新标准

·C99允许在for语句的表达式1中定义变量
↑实例在for4.c

========================================
《循环嵌套》
循环结构和分支结构一样，都是可以实现嵌套的。
分支结构决定了哪写语句被运行，哪些语句不被运行。
而循环语句决定了那些语句会被运行多少次。
对于嵌套的循环结构执行顺序是从内到外，先执行内层的循环，再执行外层的循环。
↑实例在for5.c




